# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Deploy Python Function Multi-Cloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  PYTHON_VERSION: '3.8' # set this to the python version to use (supports 3.6, 3.7, 3.8)

jobs:
  Azure:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master
    
    - name: 'Check Syntax Python Code For Azure job'
      uses: cclauss/Find-Python-syntax-errors-action@master

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v1
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: 'githubfunction'
        slot-name: 'dev'
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_55b7621b766942728e16eec0537d0e70 }}
        
  Google:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    #does this mean that the files in my github repo are accessible by this YAML file?
    - uses: actions/checkout@v2

    - name: 'Check Syntax Python Code For Google job'
      uses: cclauss/Find-Python-syntax-errors-action@master

    #installs a version of python, but I need this if deploying to a severless Python Lambda?
    - name: Set up Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Setup GCP Service Account
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_email: ${{ secrets.GCP_EMAIL }}
        service_account_key: ${{ secrets.GCP_KEY }}    
        export_default_credentials: true
        
    - name: Deploy the function
      run: |
        gcloud config unset project
        gcloud functions deploy /Google_Functions/main.py \
          --region europe-west1 \
          --source https://source.developers.google.com/projects/idyllic-chimera-298910/repos/default/revisions//paths/Google_Functions  

    - uses: actions/checkout@v2
    - id: deploy
      uses: google-github-actions/deploy-cloud-functions@main
      with:
        name: function-1
        runtime: python3.8
        region: europe-west1
        credentials: ${{ secrets.GCP_KEY }}
  AWS:
  # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    #does this mean that the files in my github repo are accessible by this YAML file?
    - uses: actions/checkout@v2

    - name: 'Check Syntax Python Code For AWS job'
      uses: cclauss/Find-Python-syntax-errors-action@master

    #installs a version of python, but I need this if deploying to a severless Python Lambda?
    - name: Set up Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}


    #credentials to connect to AWS
    - name: Configure AWS credentials from Admin account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1
        profile_name: default
        runtime: python3.8

    # Runs a set of commands using the runners shell; THIS DOESN'T WORK
    - name: Run multiple commands for install environment
      run: |
         #install PIP
         python -m pip install pip --upgrade pip
         #install all dependencies as defined by requirements.txt in the current directory
         pip3 install -r requirements.txt
         npm install
         #ensuring current working directory is accessible by the function--this might not be doing anything
         export PATH=$PATH:$(pwd)
    # Deploy main.py to AWS
    - name: Serverless
      uses: serverless/github-action@master
      with:
        args: deploy --region eu-central-1 
